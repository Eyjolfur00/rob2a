#pragma config(Sensor, in1,    lightSensor,    sensorReflection)
#pragma config(Sensor, dgtl1,  RightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl8,  LeftEncoder,    sensorQuadEncoder)
#pragma config(Sensor, dgtl10, sonarSensor,    sensorSONAR_cm)
#pragma config(Motor,  port2,           rightMotor,    tmotorServoContinuousRotation, openLoop, reversed)
#pragma config(Motor,  port3,           leftMotor,     tmotorServoContinuousRotation, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                                			- Drive without crashing -                                    *|
|*                                      ROBOTC on VEX 2.0 CORTEX                                      *|
|*                                                                                                    *|
|*  This program will make the robot never crash and if lights are off then the robot stops so when   *|
|*  Turn the lights on he will start driving again																										*|
|*                                                                                                    *|
|*                                        ROBOT CONFIGURATION                                         *|
|*    NOTES:                                                                                          *|
|*    1)  Reversing 'rightMotor' (port 2) in the "Motors and Sensors Setup" is needed with the        *|
|*        "Squarebot" mode, but may not be needed for all robot configurations.                       *|                                                          *|
|*                                                                                                    *|               *|
\*----------------------------------------------------------------------------------------------------*/


//+++++++++++++++++++++++++++++++++++++++++++++| MAIN |+++++++++++++++++++++++++++++++++++++++++++++++
task main()
{
	while(true) {
		
		while(SensorValue(lightSensor) < 100)
		{
			motor[rightMotor] = 0;
			motor[leftMotor] = 0;
			wait10Msec(10);
		}
		while(SensorValue(lightSensor) > 100)
		{
			if(SensorValue[RightEncoder] == -SensorValue[LeftEncoder]) {
				motor[rightMotor] = -70;
				motor[leftMotor]  = -70;
			}
			else if(SensorValue[RightEncoder] > -SensorValue[LeftEncoder]) {
				motor[rightMotor] = -50;
				motor[leftMotor]  = -70;
			}
			else {
				motor[rightMotor] = -70;
				motor[leftMotor]  = -50;
			}
			
			if (vexRT[Btn7U] == 1) {
  			break;
			}
  	 	}
  	 	while (true){
	  	 	motor[rightMotor] = -64;
				motor[leftMotor] = -64;
				wait1Msec(500);
				motor[rightMotor] = -50;
				motor[leftMotor] = 50;
				wait1Msec(300);
				while (SensorValue(sonarSensor) < 100 || SensorValue(sonarSensor) == -1) {
					motor[rightMotor] = -70;
					motor[leftMotor] = 70;
				}
  		}
	}
}
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
