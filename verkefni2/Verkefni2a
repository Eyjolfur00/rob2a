#pragma config(Motor,  port2,           RightMotor,    tmotorVex269, openLoop)
#pragma config(Motor,  port3,           LeftMotor,     tmotorVex269, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

/*----------------------------------------------------------------------------------------------------*\
|*                                         - Moving Forward -                                         *|
|*                                      ROBOTC on VEX 2.0 CORTEX                                      *|
|*                                                                                                    *|
|*  This program Will make the robot drive 0,5 meter forward then 0,5 meter backwards theN            *|
|*		1 meter forward and then 1 meter backwards  etc to 2,5 meter                                      *|
|*                                                                                                    *|                                                                        *|                 *|
\*-----------------------------------------------------------------------------------------------4246-*/



task main()
{
  while(true) //repeat indefinitely
  {
    // code to drive forward for 1 seconds
    motor[LeftMotor] = 63;   //Set the LeftMotor servo to go forward at power level 63
    motor[RightMotor] = 63;  //Set the RightMotor servo to go forward at power level 63
    wait1Msec(1000);         //Drive forward for 1 sec (0,5m)

    // code to drive backwards for 1 second
    motor[LeftMotor] = -63;    //Set the LeftMotor servo to go backwards at power level -63
    motor[RightMotor] = -63;   //Set the RightMotor servo to go backwards at power level -63
    wait1Msec(1000);         //Drive backwards for 1 sec (0,5m)

    // code to drive forward for 2 seconds
    motor[LeftMotor] = 63;  //Set the LeftMotor servo to go forward at power level 63
    motor[RightMotor] = 63; //Set the RightMotor servo to go forward at power level 63
    wait1Msec(2000);         //Drive forward for 2 sec (1m)

    // code to drive backwards for 2 second
    motor[LeftMotor] = -63;    //Set the LeftMotor servo to go backwards at power level -63
    motor[RightMotor] = -63;   //Set the RightMotor servo to go backwards at power level -63
    wait1Msec(2000);         //Drive backwards for 2 sec (1m)

    // code to drive forward for 3 seconds
    motor[LeftMotor] = 63;   //Set the LeftMotor servo to go forward at power level 63
    motor[RightMotor] = 63;  //Set the RightMotor servo to go forward at power level 63
    wait1Msec(3000);         //Drive forward for 3 sec (1,5m)

    // code to drive backwards for 3 second
    motor[LeftMotor] = -63;    //Set the LeftMotor servo to go backwards at power level -63
    motor[RightMotor] = -63;   //Set the RightMotor servo to go backwards at power level -63
    wait1Msec(3000);         //Drive backwards for 3 sec (1,5m)

    // code to drive forward for 4 seconds
    motor[LeftMotor] = 63;  //Set the LeftMotor servo to go forward at power level 63
    motor[RightMotor] = 63; //Set the RightMotor servo to go forward at power level 63
    wait1Msec(4000);         //Drive forward for 4 sec (2m)

    // code to drive backwards for 4 second
    motor[LeftMotor] = -63;    //Set the LeftMotor servo to go backwards at power level -63
    motor[RightMotor] = -63;   //Set the RightMotor servo to go backwards at power level -63
    wait1Msec(4000);         //Drive backwards for 4 sec (2m)

    // code to drive forward for 5 seconds
    motor[LeftMotor] = 63;  //Set the LeftMotor servo to go forward at power level 63
    motor[RightMotor] = 63; //Set the RightMotor servo to go forward at power level 63
    wait1Msec(5000);         //Drive forward for 5 sec (2,5m)

  }
}
